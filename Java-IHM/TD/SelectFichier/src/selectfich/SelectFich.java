/*
 * SelectFich.java
 *
 * Created on 23 avril 2007, 11:26
 */

package selectfich;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;

/**
 *
 * @author  Moonesh.Ramburrun
 */
public class SelectFich extends javax.swing.JFrame {
    
    /** Creates new form SelectFich */
    public SelectFich() {
        initComponents();
        listModel = new java.util.ArrayList<>();
// on fera jList1.setListData(listModel.toArray()); directement pour un obj de type ArrayList
        setLocation(200,150);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectionnerFichier = new javax.swing.JButton();
        editerFichier = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        calculer = new javax.swing.JButton();
        calculer1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("                                S E L E C T I O N     D ' U N    F I C H I E R    T E X T E  ");

        selectionnerFichier.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        selectionnerFichier.setText("Sélectionner un fichier texte");
        selectionnerFichier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionnerFichierActionPerformed(evt);
            }
        });

        editerFichier.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        editerFichier.setText("Editer Le Fichier Des Notes");
        editerFichier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editerFichierActionPerformed(evt);
            }
        });

        jList1.setBackground(new java.awt.Color(102, 204, 255));
        jList1.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setFocusable(false);
        jScrollPane1.setViewportView(jList1);

        calculer.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        calculer.setText("Calculer");
        calculer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculerActionPerformed(evt);
            }
        });

        calculer1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        calculer1.setText("Close");
        calculer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                close(evt);
            }
        });

        jLabel1.setText("NOM-PRENOM");

        jLabel2.setText("NOTE1");

        jLabel3.setText("NOTE2");

        jLabel4.setText("MOY ETU");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jButton1.setText("Clear");
        jButton1.setMaximumSize(new java.awt.Dimension(75, 25));
        jButton1.setMinimumSize(new java.awt.Dimension(75, 25));
        jButton1.setPreferredSize(new java.awt.Dimension(75, 25));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, selectionnerFichier, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, editerFichier, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, calculer, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(calculer1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(24, 24, 24))
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .add(95, 95, 95)
                        .add(jLabel2)
                        .add(44, 44, 44)
                        .add(jLabel3)
                        .add(57, 57, 57)
                        .add(jLabel4)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(81, 81, 81)
                        .add(selectionnerFichier)
                        .add(18, 18, 18)
                        .add(editerFichier)
                        .add(34, 34, 34)
                        .add(calculer)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 27, Short.MAX_VALUE)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(calculer1))
                    .add(layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jLabel2)
                            .add(jLabel3)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1)))
                .add(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectionnerFichierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionnerFichierActionPerformed
     javax.swing.JFileChooser bdd;
     bdd = new javax.swing.JFileChooser( new java.io.File(".") );
     Filtre f;
     f = new Filtre();
     bdd.addChoosableFileFilter(f); // filtre à appliquer
     bdd.setFileFilter(f);
     if( bdd.showOpenDialog(null) == javax.swing.JFileChooser.APPROVE_OPTION ){
      // bdd.showSaveDialog pour la boîte de dialogue de sauvegarde
      fichier = bdd.getSelectedFile();
     } 
     if ( fichier == null ){ 
        javax.swing.JOptionPane.showMessageDialog(
              this,
              "Vous n'avez pas selectionné un nom de fichier : \"notes.txt\" choisi par défaut )" );
     }
     else{
        fichierSelectionne =  fichier.getName();
        try{
            //Dès que le fichier notes.txt est sélectionné on affiche les informations.
            listModel.clear();
            String enr="";
            BufferedReader lecture;
            lecture = new BufferedReader(new FileReader(fichier));
            while((enr= lecture.readLine())!=null){
                listModel.add(String.format("%s %9s %11s",enr.substring(0,20),enr.substring(20,25),enr.substring(26,31)));
            }
            jList1.setListData(listModel.toArray()); 
        }catch(java.io.IOException e){
            javax.swing.JOptionPane.showMessageDialog(this,"ERREUR\nMerci de prendre notes.txt fournis en annexe.","Erreur",javax.swing.JOptionPane.ERROR_MESSAGE);
            javax.swing.JOptionPane.showMessageDialog( this, e.getMessage() );
        }
        
     } // fichier.getAbsolutePath();  pour nom absolu                
    }//GEN-LAST:event_selectionnerFichierActionPerformed

    private void editerFichierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editerFichierActionPerformed
     if ( fichier == null ){ 
      //javax.swing.JOptionPane.showMessageDialog( this, "Vous n'avez pas selectionné un nom de fichier : \"notes.txt\" choisi par défaut )" );
       fichier = new java.io.File(fichierSelectionne);
     }
     else {
     try {
       java.awt.Desktop.getDesktop().edit(fichier);
     }catch ( java.io.IOException e ) { 
       javax.swing.JOptionPane.showMessageDialog( this, e.getMessage() );
      } 
     }
    }//GEN-LAST:event_editerFichierActionPerformed

    private void calculerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculerActionPerformed
      // pour effacer le contenu de la liste listModel : listModel.clear();

        if ( fichier == null ){ 
            //On sélectionne par défaut le fichier notes.txt.
            fichier = new java.io.File(fichierSelectionne);
        }

        try {
            listModel.clear();
            BufferedReader lecture;
            try {
                //On prépare un lecteur de fichier.
                lecture = new BufferedReader(new FileReader(fichier));
                String enr="";
                ArrayList<Etudiant> listEtudiant = new ArrayList();
                ArrayList<Double> listMoyenneNote1 = new ArrayList();
                ArrayList<Double> listMoyenneNote2 = new ArrayList();
                ArrayList<Double> listMoyenneMoyenneEtudiant = new ArrayList();

                while((enr= lecture.readLine())!=null){
                    //Pour chaque ligne on récupère les données spécifiques à l'étudiant.
                    Etudiant etud = new Etudiant(enr.substring(0,20),Double.parseDouble(enr.substring(20,25)),Double.parseDouble(enr.substring(26,31)));
                    //Et on stock l'étudiant.
                    listEtudiant.add(etud);
                }
                
                //On liste les notes par type (note1, note2, moyenne Etu).
                for(Etudiant eleve : listEtudiant){
                    eleve.setMoyenne(moyenneEtu(eleve.getNote1(),eleve.getNote2()));
                    listMoyenneNote1.add(eleve.getNote1());
                    listMoyenneNote2.add(eleve.getNote2());
                    listMoyenneMoyenneEtudiant.add(eleve.getMoyenne());
                }

                //On calcul les moyennes et écarts-types.
                //Des variables ont été utilisées mais pas nécessaires.
                double moyenneNote1 = calculMoyenneNote(listMoyenneNote1);
                double moyenneNote2 = calculMoyenneNote(listMoyenneNote2);
                double moyenneMoyenneEtudiant = calculMoyenneNote(listMoyenneMoyenneEtudiant);
                double ecartTypeNote1 = calculEcartType(listMoyenneNote1,moyenneNote1);
                double ecartTypeNote2 = calculEcartType(listMoyenneNote2,moyenneNote2);

                //On stock les étudiants dans listModel.
                for(Etudiant eleve : listEtudiant){
                    listModel.add(eleve.getNomPrenom()+""+String.format("%10.2f",eleve.getNote1())+""
                            +String.format("%12.2f",eleve.getNote2())+""+String.format("%14.2f", eleve.getMoyenne()));
                }
                
                //On enregistre les moyennes des élèves et les écarts-type.
                listModel.add("\n");
                listModel.add("Moyenne : "+String.format("%20.2f",moyenneNote1)+" "+String.format("%11.2f",moyenneNote2)+""
                        + " "+String.format("%13.2f",moyenneMoyenneEtudiant));
                listModel.add("EC TYPE : "+String.format("%20.2f",ecartTypeNote1)+" "+String.format("%11.2f", ecartTypeNote2));

                //On affiche toutes les informations.
                jList1.setListData(listModel.toArray());

                lecture.close();
            } catch ( java.io.IOException e ) { 
                javax.swing.JOptionPane.showMessageDialog( this, e.getMessage() );
            }
        } catch (java.lang.NullPointerException e){
            listModel.add("Erreur, vous essayez de calculer un fichier inexistant");
            jList1.setListData(listModel.toArray());
        }

    }//GEN-LAST:event_calculerActionPerformed

    private void close(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_close
        // TODO add your handling code here:
        dispose();
        java.lang.System.exit(0);
    }//GEN-LAST:event_close

    private void clear(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear
        // TODO add your handling code here:
        listModel.clear();
        jList1.setListData(listModel.toArray());
    }//GEN-LAST:event_clear
    
    //Fonction pour calculer la moyenne générale pour chaque note.
    public double calculMoyenneNote(ArrayList<Double> listMoyenneNote){
        double moyenneNote = 0;
        double etudiantNote = 0;
        
        //On fait la somme des notes.
        for(double note : listMoyenneNote){etudiantNote = etudiantNote+note;}
        
        //On détermine la moyenne.
        moyenneNote = etudiantNote/listMoyenneNote.size();
        
        //On retourne la moyenne pour la note1 ou la note2.
        return moyenneNote;
    }
    
    //Fonction pour calculer l'écart-typep pour chaque note.
    public double calculEcartType(ArrayList<Double> listMoyNote,Double moyenneDeNote){
        double ecartType = 0;
        double sommeCarree = 0;
       
        //On fait la somme des carrées pour déterminer l'écart-type.
        for(double note : listMoyNote){sommeCarree = sommeCarree + Math.pow((note-moyenneDeNote),2);}
        
        //On fait la racine carrée de la somme des carrées divisé par le nombre de note.
        ecartType = Math.sqrt(sommeCarree/listMoyNote.size());
        
        //On renvoie l'écart-type.
        return ecartType;
    }
    
    //Fonction pour déterminer la moyenne de chaque étudiant.
    public double moyenneEtu(double note1, double note2){
        ArrayList<Double> noteEtu = new ArrayList();
        noteEtu.add(note1);
        noteEtu.add(note2);
       
        double moyEtu = 0;
        //On additionne les notes.
        for(double note:noteEtu){moyEtu=moyEtu+note;}
        //On fait la moyenne de l'étudiant.
        moyEtu=moyEtu/noteEtu.size();
        
        return (moyEtu);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
               new SelectFich().setVisible(true);
        }
     });
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculer;
    private javax.swing.JButton calculer1;
    private javax.swing.JButton editerFichier;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton selectionnerFichier;
    // End of variables declaration//GEN-END:variables
    java.util.ArrayList<String> listModel;  
    private String fichierSelectionne = "notes.txt";
    private java.io.File fichier = null;        

}
